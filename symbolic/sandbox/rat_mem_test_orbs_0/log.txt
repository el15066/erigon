MSTORE 64 #80
MLOAD 64
MSTORE None %74
MLOAD None
MSTORE None %75
MLOAD None
MLOAD None
MSTORE None %86
MLOAD None
MSTORE None %105
MLOAD 64
MLOAD 64
MSTORE None %134
MLOAD 64
MLOAD 64
MSTORE None %616
MLOAD 64
MLOAD 64
MSTORE None %196
MLOAD 64
MLOAD 64
MSTORE None #12
MLOAD 64
MLOAD 64
MSTORE None %257
MLOAD 64
MLOAD 64
MSTORE None %999
MLOAD 64
MLOAD 64
MSTORE None %296
MLOAD 64
MLOAD 64
MSTORE None #204fce5e3e25026110000000
MLOAD 64
MLOAD 64
MSTORE None %325
MLOAD None
MSTORE None %326
MLOAD None
MLOAD None
MSTORE None %337
MLOAD None
MSTORE None %356
MLOAD 64
MLOAD 64
MSTORE None %385
MLOAD 64
MLOAD 64
MSTORE None %439
MLOAD 64
MLOAD 64
MSTORE None %1245
MLOAD 64
MLOAD 64
MSTORE 64 %489
MSTORE None #4
MSTORE None #4f72627300000000000000000000000000000000000000000000000000000000
MSTORE 0 %502
MSTORE 32 #3
SHA3 0 64
ok [%502, #3]
MSTORE 0 %513
MSTORE 32 %508
SHA3 0 64
ok [%513, %508]
MLOAD 64
MSTORE None %125
MLOAD 64
MLOAD 64
MSTORE None #70a0823100000000000000000000000000000000000000000000000000000000
MSTORE None %567
MLOAD 64
MLOAD 64
MLOAD None
MSTORE 0 %633
MSTORE 32 #1
SHA3 0 64
ok [%633, #1]
MSTORE 0 %652
MSTORE 32 #3
SHA3 0 64
ok [%652, #3]
MSTORE 0 %664
MSTORE 32 %658
SHA3 0 64
ok [%664, %658]
MSTORE 0 %684
MSTORE 32 #1
SHA3 0 64
ok [%684, #1]
MSTORE 0 %700
MSTORE 32 #1
SHA3 0 64
ok [%700, #1]
MSTORE 0 %713
MSTORE 32 #1
SHA3 0 64
ok [%713, #1]
MSTORE 0 %729
MSTORE 32 #1
SHA3 0 64
ok [%729, #1]
MSTORE 0 %742
MSTORE 32 #3
SHA3 0 64
ok [%742, #3]
MSTORE 0 %754
MSTORE 32 %748
SHA3 0 64
ok [%754, %748]
MSTORE 0 %770
MSTORE 32 #3
SHA3 0 64
ok [%770, #3]
MSTORE 0 %782
MSTORE 32 %776
SHA3 0 64
ok [%782, %776]
MLOAD 64
MSTORE None <Unresolved sp:-3 block:0xc92>
MLOAD 64
MLOAD 64
MSTORE None #f2fde38b00000000000000000000000000000000000000000000000000000000
MSTORE None %841
MLOAD 64
MSTORE 0 %871
MSTORE 32 #3
SHA3 0 64
ok [%871, #3]
MSTORE 0 %882
MSTORE 32 %877
SHA3 0 64
ok [%882, %877]
MSTORE 0 %900
MSTORE 32 #3
SHA3 0 64
ok [%900, #3]
MSTORE 0 %911
MSTORE 32 %906
SHA3 0 64
ok [%911, %906]
MSTORE 0 %929
MSTORE 32 #3
SHA3 0 64
ok [%929, #3]
MSTORE 0 %940
MSTORE 32 %935
SHA3 0 64
ok [%940, %935]
MSTORE 0 %959
MSTORE 32 #3
SHA3 0 64
ok [%959, #3]
MSTORE 0 %970
MSTORE 32 %965
SHA3 0 64
ok [%970, %965]
MLOAD 64
MSTORE None %977
MLOAD 64
MSTORE 0 %992
MSTORE 32 #1
SHA3 0 64
ok [%992, #1]
MLOAD 64
MSTORE 64 %1016
MSTORE None #4
MSTORE None #4f52425300000000000000000000000000000000000000000000000000000000
MSTORE 0 %1039
MSTORE 32 #1
SHA3 0 64
ok [%1039, #1]
MSTORE 0 %1060
MSTORE 32 #1
SHA3 0 64
ok [%1060, #1]
MSTORE 0 %1077
MSTORE 32 #1
SHA3 0 64
ok [%1077, #1]
MSTORE 0 %1090
MSTORE 32 #1
SHA3 0 64
ok [%1090, #1]
MSTORE 0 %1106
MSTORE 32 #1
SHA3 0 64
ok [%1106, #1]
MLOAD 64
MSTORE None <Unresolved sp:-3 block:0x137b>
MLOAD 64
MSTORE 0 %1136
MSTORE 32 #3
SHA3 0 64
ok [%1136, #3]
MSTORE 0 %1147
MSTORE 32 %1142
SHA3 0 64
ok [%1147, %1142]
MSTORE 0 %1164
MSTORE 32 #3
SHA3 0 64
ok [%1164, #3]
MSTORE 0 %1175
MSTORE 32 %1170
SHA3 0 64
ok [%1175, %1170]
MSTORE 0 %1194
MSTORE 32 #3
SHA3 0 64
ok [%1194, #3]
MSTORE 0 %1205
MSTORE 32 %1200
SHA3 0 64
ok [%1205, %1200]
MLOAD 64
MSTORE None %1212
MLOAD 64
MSTORE 0 %1227
MSTORE 32 #3
SHA3 0 64
ok [%1227, #3]
MSTORE 0 %1238
MSTORE 32 %1233
SHA3 0 64
ok [%1238, %1233]
MLOAD 64
MLOAD 64
MLOAD 64
MSTORE None #a9059cbb00000000000000000000000000000000000000000000000000000000
MSTORE None %1317
MSTORE None <Unresolved sp:-1 block:0x180a>
MLOAD 64
MLOAD 64
MLOAD None
<SSAFunction name:_dispatch hash:0x0 offset:0x0 num_blocks:27 blocks:<SSABasicBlock offset:0x0 num_insns:5 in: [] insns:[
	<0x4: // MSTORE(#40, #80)>
	<0x7: %3 = CALLDATASIZE()>
	<0x8: %4 = LT(%3, #4)>
	<0xc: JUMPI(#f1, %4)>
	<0xc: ICALL(_fallthrough)>
] fallthrough:None jumps:[0xf1]>
<SSABasicBlock offset:0x2c4 num_insns:8 in: [] insns:[
	<0x2c7: %192 = MLOAD(#40)>
	<0x2ca: %193 = ISZERO(<Unresolved sp:-1 block:0x2c4>)>
	<0x2cd: %196 = ISZERO(%193)>
	<0x2cf: MSTORE(%192, %196)>
	<0x2d2: %198 = ADD(#20, %192)>
	<0x2d8: %200 = MLOAD(#40)>
	<0x2db: %201 = SUB(%198, %200)>
	<0x2dd: RETURN(%200, %201)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x56b num_insns:8 in: [] insns:[
	<0x56e: %381 = MLOAD(#40)>
	<0x571: %382 = ISZERO(<Unresolved sp:-1 block:0x56b>)>
	<0x574: %385 = ISZERO(%382)>
	<0x576: MSTORE(%381, %385)>
	<0x579: %387 = ADD(#20, %381)>
	<0x57f: %389 = MLOAD(#40)>
	<0x582: %390 = SUB(%387, %389)>
	<0x584: RETURN(%389, %390)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x635 num_insns:8 in: [] insns:[
	<0x638: %435 = MLOAD(#40)>
	<0x63b: %436 = ISZERO(<Unresolved sp:-1 block:0x635>)>
	<0x63e: %439 = ISZERO(%436)>
	<0x640: MSTORE(%435, %439)>
	<0x643: %441 = ADD(#20, %435)>
	<0x649: %443 = MLOAD(#40)>
	<0x64c: %444 = SUB(%441, %443)>
	<0x64e: RETURN(%443, %444)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x9b5 num_insns:1 in: [] insns:[
	<0x9b8: JUMP(<Unresolved sp:-3 block:0x9b5>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xb2b num_insns:11 in: [] insns:[
	<0xb46: %698 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-5 block:0xb2b>)>
	<0xb5c: %700 = AND(#ffffffffffffffffffffffffffffffffffffffff, %698)>
	<0xb5e: // MSTORE(#0, %700)>
	<0xb64: // MSTORE(#20, #1)>
	<0xb6a: %706 = SHA3RES(%700, #1)    // M[0 +40]>
	<0xb6d: SSTORE(%706, <Unresolved sp:-1 block:0xb2b>)>
	<0xb8d: %711 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0xb2b>)>
	<0xba3: %713 = AND(#ffffffffffffffffffffffffffffffffffffffff, %711)>
	<0xba5: // MSTORE(#0, %713)>
	<0xbab: // MSTORE(#20, #1)>
	<0xbbf: JUMP(#190e)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xbc0 num_insns:15 in: [] insns:[
	<0xbdb: %727 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0xbc0>)>
	<0xbf1: %729 = AND(#ffffffffffffffffffffffffffffffffffffffff, %727)>
	<0xbf3: // MSTORE(#0, %729)>
	<0xbf9: // MSTORE(#20, #1)>
	<0xbff: %735 = SHA3RES(%729, #1)    // M[0 +40]>
	<0xc02: SSTORE(%735, <Unresolved sp:-1 block:0xbc0>)>
	<0xc22: %740 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-5 block:0xbc0>)>
	<0xc38: %742 = AND(#ffffffffffffffffffffffffffffffffffffffff, %740)>
	<0xc3a: // MSTORE(#0, %742)>
	<0xc40: // MSTORE(#20, #3)>
	<0xc46: %748 = SHA3RES(%742, #3)    // M[0 +40]>
	<0xc49: %750 = CALLER()    // ADDRESS>
	<0xc77: // MSTORE(#0, %750)>
	<0xc7d: // MSTORE(#20, %748)>
	<0xc91: JUMP(#18f5)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xc92 num_insns:19 in: [] insns:[
	<0xcad: %768 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-5 block:0xc92>)>
	<0xcc3: %770 = AND(#ffffffffffffffffffffffffffffffffffffffff, %768)>
	<0xcc5: // MSTORE(#0, %770)>
	<0xccb: // MSTORE(#20, #3)>
	<0xcd1: %776 = SHA3RES(%770, #3)    // M[0 +40]>
	<0xcd4: %778 = CALLER()    // ADDRESS>
	<0xd02: // MSTORE(#0, %778)>
	<0xd08: // MSTORE(#20, %776)>
	<0xd0e: %788 = SHA3RES(%778, %776)    // M[0 +40]>
	<0xd11: SSTORE(%788, <Unresolved sp:-1 block:0xc92>)>
	<0xd29: %790 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0xc92>)>
	<0xd40: %792 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-5 block:0xc92>)>
	<0xd65: %795 = MLOAD(#40)>
	<0xd69: MSTORE(%795, <Unresolved sp:-3 block:0xc92>)>
	<0xd6c: %797 = ADD(#20, %795)>
	<0xd72: %799 = MLOAD(#40)>
	<0xd75: %800 = SUB(%797, %799)>
	<0xd77: LOG3(%799, %800, #ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, %792, %790)>
	<0xd81: JUMP(<Unresolved sp:-6 block:0xc92>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xfe3 num_insns:10 in: [] insns:[
	<0xfe8: %925 = CALLER()    // ADDRESS>
	<0x1016: // MSTORE(#0, %925)>
	<0x101c: // MSTORE(#20, #3)>
	<0x1022: %935 = SHA3RES(%925, #3)    // M[0 +40]>
	<0x103b: %938 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-5 block:0xfe3>)>
	<0x1051: %940 = AND(#ffffffffffffffffffffffffffffffffffffffff, %938)>
	<0x1053: // MSTORE(#0, %940)>
	<0x1059: // MSTORE(#20, %935)>
	<0x105f: %946 = SHA3RES(%940, %935)    // M[0 +40]>
	<0x1062: SSTORE(%946, <Unresolved sp:-1 block:0xfe3>)>
] fallthrough:0x1064 jumps:None>
<SSABasicBlock offset:0x12e6 num_insns:10 in: [] insns:[
	<0x12eb: %1073 = CALLER()    // ADDRESS>
	<0x1319: // MSTORE(#0, %1073)>
	<0x131f: // MSTORE(#20, #1)>
	<0x1325: %1083 = SHA3RES(%1073, #1)    // M[0 +40]>
	<0x1328: SSTORE(%1083, <Unresolved sp:-1 block:0x12e6>)>
	<0x1348: %1088 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x12e6>)>
	<0x135e: %1090 = AND(#ffffffffffffffffffffffffffffffffffffffff, %1088)>
	<0x1360: // MSTORE(#0, %1090)>
	<0x1366: // MSTORE(#20, #1)>
	<0x137a: JUMP(#190e)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x137b num_insns:15 in: [] insns:[
	<0x1396: %1104 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x137b>)>
	<0x13ac: %1106 = AND(#ffffffffffffffffffffffffffffffffffffffff, %1104)>
	<0x13ae: // MSTORE(#0, %1106)>
	<0x13b4: // MSTORE(#20, #1)>
	<0x13ba: %1112 = SHA3RES(%1106, #1)    // M[0 +40]>
	<0x13bd: SSTORE(%1112, <Unresolved sp:-1 block:0x137b>)>
	<0x13d5: %1114 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x137b>)>
	<0x13d6: %1115 = CALLER()    // ADDRESS>
	<0x1411: %1120 = MLOAD(#40)>
	<0x1415: MSTORE(%1120, <Unresolved sp:-3 block:0x137b>)>
	<0x1418: %1122 = ADD(#20, %1120)>
	<0x141e: %1124 = MLOAD(#40)>
	<0x1421: %1125 = SUB(%1122, %1124)>
	<0x1423: LOG3(%1124, %1125, #ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, %1115, %1114)>
	<0x142c: JUMP(<Unresolved sp:-5 block:0x137b>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x14c3 num_insns:29 in: [] insns:[
	<0x14c8: %1160 = CALLER()    // ADDRESS>
	<0x14f6: // MSTORE(#0, %1160)>
	<0x14fc: // MSTORE(#20, #3)>
	<0x1502: %1170 = SHA3RES(%1160, #3)    // M[0 +40]>
	<0x151b: %1173 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x14c3>)>
	<0x1531: %1175 = AND(#ffffffffffffffffffffffffffffffffffffffff, %1173)>
	<0x1533: // MSTORE(#0, %1175)>
	<0x1539: // MSTORE(#20, %1170)>
	<0x153f: %1181 = SHA3RES(%1175, %1170)    // M[0 +40]>
	<0x1542: SSTORE(%1181, <Unresolved sp:-1 block:0x14c3>)>
	<0x155a: %1183 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x14c3>)>
	<0x155b: %1184 = CALLER()    // ADDRESS>
	<0x1597: %1190 = CALLER()    // ADDRESS>
	<0x15c5: // MSTORE(#0, %1190)>
	<0x15cb: // MSTORE(#20, #3)>
	<0x15d1: %1200 = SHA3RES(%1190, #3)    // M[0 +40]>
	<0x15ea: %1203 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-4 block:0x14c3>)>
	<0x1600: %1205 = AND(#ffffffffffffffffffffffffffffffffffffffff, %1203)>
	<0x1602: // MSTORE(#0, %1205)>
	<0x1608: // MSTORE(#20, %1200)>
	<0x160e: %1211 = SHA3RES(%1205, %1200)    // M[0 +40]>
	<0x160f: %1212 = SLOAD(%1211)>
	<0x1612: %1214 = MLOAD(#40)>
	<0x1616: MSTORE(%1214, %1212)>
	<0x1619: %1216 = ADD(#20, %1214)>
	<0x161f: %1218 = MLOAD(#40)>
	<0x1622: %1219 = SUB(%1216, %1218)>
	<0x1624: LOG3(%1218, %1219, #8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, %1184, %1183)>
	<0x162d: JUMP(<Unresolved sp:-5 block:0x14c3>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x180a num_insns:16 in: [] insns:[
	<0x1821: %1304 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-3 block:0x180a>)>
	<0x182b: %1307 = MLOAD(#40)>
	<0x1853: MSTORE(%1307, #a9059cbb00000000000000000000000000000000000000000000000000000000)>
	<0x1856: %1313 = ADD(#4, %1307)>
	<0x186e: %1315 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-2 block:0x180a>)>
	<0x1884: %1317 = AND(#ffffffffffffffffffffffffffffffffffffffff, %1315)>
	<0x1886: MSTORE(%1313, %1317)>
	<0x1889: %1319 = ADD(#20, %1313)>
	<0x188c: MSTORE(%1319, <Unresolved sp:-1 block:0x180a>)>
	<0x188f: %1321 = ADD(#20, %1319)>
	<0x1898: %1324 = MLOAD(#40)>
	<0x189b: %1325 = SUB(%1321, %1324)>
	<0x18a1: %1327 = EXTCODESIZE(%1304)>
	<0x18a2: %1328 = ISZERO(%1327)>
	<0x18a4: %1329 = ISZERO(%1328)>
	<0x18a8: JUMPI(#18ad, %1329)>
] fallthrough:0x18a9 jumps:[0x18ad]>
<SSABasicBlock offset:0x18a9 num_insns:1 in: [0x180a] insns:[
	<0x18ac: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x18ad num_insns:5 in: [0x180a] insns:[
	<0x18af: %1332 = GAS()>
	<0x18b0: %1333 = CALL(%1332, %1304, #0, %1324, %1325, %1324, #20)>
	<0x18b1: %1334 = ISZERO(%1333)>
	<0x18b3: %1335 = ISZERO(%1334)>
	<0x18b7: JUMPI(#18c1, %1335)>
] fallthrough:0x18b8 jumps:[0x18c1]>
<SSABasicBlock offset:0x18b8 num_insns:4 in: [0x18ad] insns:[
	<0x18b8: %1337 = RETURNDATASIZE()>
	<0x18bc: RETURNDATACOPY(#0, #0, %1337)>
	<0x18bd: %1339 = RETURNDATASIZE()>
	<0x18c0: REVERT(#0, %1339)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x18c1 num_insns:5 in: [0x18ad] insns:[
	<0x18c8: %1342 = MLOAD(#40)>
	<0x18c9: %1343 = RETURNDATASIZE()>
	<0x18cd: %1345 = LT(%1343, #20)>
	<0x18ce: %1346 = ISZERO(%1345)>
	<0x18d2: JUMPI(#18d7, %1346)>
] fallthrough:0x18d3 jumps:[0x18d7]>
<SSABasicBlock offset:0x18d3 num_insns:1 in: [0x18c1] insns:[
	<0x18d6: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x18d7 num_insns:4 in: [0x18c1] insns:[
	<0x18dd: %1350 = MLOAD(%1342)>
	<0x18e9: %1353 = ISZERO(%1350)>
	<0x18ea: %1354 = ISZERO(%1353)>
	<0x18ee: JUMPI(#18f0, %1354)>
] fallthrough:0x18ef jumps:[0x18f0]>
<SSABasicBlock offset:0x18ef num_insns:1 in: [0x18d7] insns:[
	<0x18ef: INVALID()>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x18f0 num_insns:1 in: [0x18d7] insns:[
	<0x18f4: JUMP(<Unresolved sp:-4 block:0x18f0>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x18f5 num_insns:3 in: [] insns:[
	<0x18fa: %1357 = GT(<Unresolved sp:-1 block:0x18f5>, <Unresolved sp:-2 block:0x18f5>)>
	<0x18fd: %1360 = ISZERO(%1357)>
	<0x1901: JUMPI(#1903, %1360)>
] fallthrough:0x1902 jumps:[0x1903]>
<SSABasicBlock offset:0x1902 num_insns:1 in: [0x18f5] insns:[
	<0x1902: INVALID()>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1903 num_insns:1 in: [0x18f5] insns:[
	<0x190d: JUMP(<Unresolved sp:-4 block:0x1903>)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x190e num_insns:4 in: [] insns:[
	<0x1913: %1364 = ADD(<Unresolved sp:-2 block:0x190e>, <Unresolved sp:-1 block:0x190e>)>
	<0x1918: %1365 = LT(%1364, <Unresolved sp:-2 block:0x190e>)>
	<0x191b: %1368 = ISZERO(%1365)>
	<0x191f: JUMPI(#1921, %1368)>
] fallthrough:0x1920 jumps:[0x1921]>
<SSABasicBlock offset:0x1920 num_insns:1 in: [0x190e] insns:[
	<0x1920: INVALID()>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1921 num_insns:1 in: [0x190e] insns:[
	<0x1929: JUMP(<Unresolved sp:-4 block:0x1921>)>
] fallthrough:None jumps:None>>

<SSAFunction name:transferOwnership(address) hash:0xf2fde38b offset:0x6c6 num_blocks:9 blocks:<SSABasicBlock offset:0x6c6 num_insns:3 in: [] insns:[
	<0x6c7: %472 = CALLVALUE()>
	<0x6c9: %473 = ISZERO(%472)>
	<0x6cd: JUMPI(#6d2, %473)>
] fallthrough:0x6ce jumps:[0x6d2]>
<SSABasicBlock offset:0x6ce num_insns:1 in: [0x6c6] insns:[
	<0x6d1: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x6d2 num_insns:2 in: [0x6c6] insns:[
	<0x6e1: %481 = CALLDATALOAD(#4)    // ADDRESS>
	<0x706: JUMP(#16b5)>
] fallthrough:None jumps:[0x16b5]>
<SSABasicBlock offset:0x707 num_insns:1 in: [0x174c] insns:[
	<0x708: STOP()>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x16b5 num_insns:4 in: [0x6d2] insns:[
	<0x16ba: %1247 = SLOAD(#0)    // ADDRESS>
	<0x16ee: %1255 = CALLER()    // ADDRESS>
	<0x1705: %1258 = EQ(%1255, %1247)>
	<0x170b: JUMPI(#1710, %1258)>
] fallthrough:0x170c jumps:[0x1710]>
<SSABasicBlock offset:0x170c num_insns:1 in: [0x16b5] insns:[
	<0x170f: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1710 num_insns:3 in: [0x16b5] insns:[
	<0x1740: %1268 = EQ(%481, #0)>
	<0x1743: %1271 = ISZERO(%1268)>
	<0x1747: JUMPI(#174c, %1271)>
] fallthrough:0x1748 jumps:[0x174c]>
<SSABasicBlock offset:0x1748 num_insns:1 in: [0x1710] insns:[
	<0x174b: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x174c num_insns:10 in: [0x1710] insns:[
	<0x1768: %1277 = SLOAD(#0)    // ADDRESS>
	<0x17bf: %1287 = MLOAD(#40)>
	<0x17c2: %1289 = MLOAD(#40)>
	<0x17c5: %1290 = SUB(%1287, %1289)>
	<0x17c7: LOG3(%1289, %1290, #8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, %1277, %481)>
	<0x17d1: %1294 = SLOAD(#0)>
	<0x17ea: %1298 = AND(#ffffffffffffffffffffffff0000000000000000000000000000000000000000, %1294)>
	<0x1804: %1302 = OR(%481, %1298)>
	<0x1806: SSTORE(#0, %1302)>
	<0x1809: JUMP(#707)>
] fallthrough:None jumps:[0x707]>>

<SSAFunction name:decimals() hash:0x313ce567 offset:0x321 num_blocks:3 blocks:<SSABasicBlock offset:0x321 num_insns:3 in: [] insns:[
	<0x322: %217 = CALLVALUE()>
	<0x324: %218 = ISZERO(%217)>
	<0x328: JUMPI(#32d, %218)>
] fallthrough:0x329 jumps:[0x336]>
<SSABasicBlock offset:0x329 num_insns:1 in: [0x321] insns:[
	<0x32c: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x336 num_insns:6 in: [0x321] insns:[
	<0x339: %224 = MLOAD(#40)>
	<0x343: MSTORE(%224, #12)>
	<0x346: %230 = ADD(#20, %224)>
	<0x34c: %232 = MLOAD(#40)>
	<0x34f: %233 = SUB(%230, %232)>
	<0x351: RETURN(%232, %233)>
] fallthrough:None jumps:None>>

<SSAFunction name:tokenFallback(address,uint256,bytes) hash:0xc0ee0b8a offset:0x585 num_blocks:3 blocks:<SSABasicBlock offset:0x585 num_insns:3 in: [] insns:[
	<0x586: %391 = CALLVALUE()>
	<0x588: %392 = ISZERO(%391)>
	<0x58c: JUMPI(#591, %392)>
] fallthrough:0x58d jumps:[0x142d]>
<SSABasicBlock offset:0x58d num_insns:1 in: [0x585] insns:[
	<0x590: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x142d num_insns:1 in: [0x585] insns:[
	<0x1431: REVERT(#0, #0)>
] fallthrough:None jumps:None>>

<SSAFunction name:reclaimToken(address) hash:0x17ffc320 offset:0x1eb num_blocks:12 blocks:<SSABasicBlock offset:0x1eb num_insns:3 in: [] insns:[
	<0x1ec: %140 = CALLVALUE()>
	<0x1ee: %141 = ISZERO(%140)>
	<0x1f2: JUMPI(#1f7, %141)>
] fallthrough:0x1f3 jumps:[0x1f7]>
<SSABasicBlock offset:0x1f3 num_insns:1 in: [0x1eb] insns:[
	<0x1f6: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1f7 num_insns:2 in: [0x1eb] insns:[
	<0x206: %149 = CALLDATALOAD(#4)    // ADDRESS>
	<0x22b: JUMP(#834)>
] fallthrough:None jumps:[0x834]>
<SSABasicBlock offset:0x834 num_insns:4 in: [0x1f7] insns:[
	<0x83b: %536 = SLOAD(#0)    // ADDRESS>
	<0x86f: %544 = CALLER()    // ADDRESS>
	<0x886: %547 = EQ(%544, %536)>
	<0x88c: JUMPI(#891, %547)>
] fallthrough:0x88d jumps:[0x891]>
<SSABasicBlock offset:0x88d num_insns:1 in: [0x834] insns:[
	<0x890: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x891 num_insns:14 in: [0x834] insns:[
	<0x8ae: %555 = ADDRESS()>
	<0x8b1: %557 = MLOAD(#40)>
	<0x8d9: MSTORE(%557, #70a0823100000000000000000000000000000000000000000000000000000000)>
	<0x8dc: %563 = ADD(#4, %557)>
	<0x8f4: %565 = AND(#ffffffffffffffffffffffffffffffffffffffff, %555)>
	<0x90a: %567 = AND(#ffffffffffffffffffffffffffffffffffffffff, %565)>
	<0x90c: MSTORE(%563, %567)>
	<0x90f: %569 = ADD(#20, %563)>
	<0x917: %572 = MLOAD(#40)>
	<0x91a: %573 = SUB(%569, %572)>
	<0x920: %575 = EXTCODESIZE(%149)>
	<0x921: %576 = ISZERO(%575)>
	<0x923: %577 = ISZERO(%576)>
	<0x927: JUMPI(#92c, %577)>
] fallthrough:0x928 jumps:[0x92c]>
<SSABasicBlock offset:0x928 num_insns:1 in: [0x891] insns:[
	<0x92b: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x92c num_insns:5 in: [0x891] insns:[
	<0x92e: %580 = GAS()>
	<0x92f: %581 = CALL(%580, %149, #0, %572, %573, %572, #20)>
	<0x930: %582 = ISZERO(%581)>
	<0x932: %583 = ISZERO(%582)>
	<0x936: JUMPI(#940, %583)>
] fallthrough:0x937 jumps:[0x940]>
<SSABasicBlock offset:0x937 num_insns:4 in: [0x92c] insns:[
	<0x937: %585 = RETURNDATASIZE()>
	<0x93b: RETURNDATACOPY(#0, #0, %585)>
	<0x93c: %587 = RETURNDATASIZE()>
	<0x93f: REVERT(#0, %587)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x940 num_insns:4 in: [0x92c] insns:[
	<0x948: %591 = RETURNDATASIZE()>
	<0x94c: %593 = LT(%591, #20)>
	<0x94d: %594 = ISZERO(%593)>
	<0x951: JUMPI(#956, %594)>
] fallthrough:0x952 jumps:[0x956]>
<SSABasicBlock offset:0x952 num_insns:1 in: [0x940] insns:[
	<0x955: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x956 num_insns:1 in: [0x940] insns:[
	<0x9b4: JUMP(#180a)>
] fallthrough:None jumps:None>>

<SSAFunction name:owner() hash:0x8da5cb5b offset:0x40e num_blocks:4 blocks:<SSABasicBlock offset:0x40e num_insns:3 in: [] insns:[
	<0x40f: %285 = CALLVALUE()>
	<0x411: %286 = ISZERO(%285)>
	<0x415: JUMPI(#41a, %286)>
] fallthrough:0x416 jumps:[0x1199]>
<SSABasicBlock offset:0x416 num_insns:1 in: [0x40e] insns:[
	<0x419: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x423 num_insns:6 in: [0x1199] insns:[
	<0x426: %292 = MLOAD(#40)>
	<0x456: MSTORE(%292, %1001)>
	<0x459: %298 = ADD(#20, %292)>
	<0x45f: %300 = MLOAD(#40)>
	<0x462: %301 = SUB(%298, %300)>
	<0x464: RETURN(%300, %301)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1199 num_insns:2 in: [0x40e] insns:[
	<0x119e: %1001 = SLOAD(#0)    // ADDRESS>
	<0x11bd: JUMP(#423)>
] fallthrough:None jumps:[0x423]>>

<SSAFunction name:increaseApproval(address,uint256) hash:0xd73dd623 offset:0x5ea num_blocks:4 blocks:<SSABasicBlock offset:0x5ea num_insns:3 in: [] insns:[
	<0x5eb: %416 = CALLVALUE()>
	<0x5ed: %417 = ISZERO(%416)>
	<0x5f1: JUMPI(#5f6, %417)>
] fallthrough:0x5f2 jumps:[0x5f6]>
<SSABasicBlock offset:0x5f2 num_insns:1 in: [0x5ea] insns:[
	<0x5f5: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x5f6 num_insns:2 in: [0x5ea] insns:[
	<0x605: %425 = CALLDATALOAD(#4)    // ADDRESS>
	<0x634: JUMP(#1432)>
] fallthrough:None jumps:[0x1432]>
<SSABasicBlock offset:0x1432 num_insns:7 in: [0x5f6] insns:[
	<0x143d: %1132 = CALLER()    // ADDRESS>
	<0x146b: // MSTORE(#0, %1132)>
	<0x1471: // MSTORE(#20, #3)>
	<0x1477: %1142 = SHA3RES(%1132, #3)    // M[0 +40]>
	<0x14a8: // MSTORE(#0, %425)>
	<0x14ae: // MSTORE(#20, %1142)>
	<0x14c2: JUMP(#190e)>
] fallthrough:None jumps:None>>

<SSAFunction name:decreaseApproval(address,uint256) hash:0x66188463 offset:0x352 num_blocks:8 blocks:<SSABasicBlock offset:0x352 num_insns:3 in: [] insns:[
	<0x353: %234 = CALLVALUE()>
	<0x355: %235 = ISZERO(%234)>
	<0x359: JUMPI(#35e, %235)>
] fallthrough:0x35a jumps:[0x35e]>
<SSABasicBlock offset:0x35a num_insns:1 in: [0x352] insns:[
	<0x35d: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x35e num_insns:3 in: [0x352] insns:[
	<0x36d: %243 = CALLDATALOAD(#4)    // ADDRESS>
	<0x38d: %248 = CALLDATALOAD(#24)>
	<0x39c: JUMP(#ebf)>
] fallthrough:None jumps:[0xebf]>
<SSABasicBlock offset:0x39d num_insns:8 in: [0x1064] insns:[
	<0x3a0: %253 = MLOAD(#40)>
	<0x3a3: %254 = ISZERO(#1)>
	<0x3a6: %257 = ISZERO(%254)>
	<0x3a8: MSTORE(%253, %257)>
	<0x3ab: %259 = ADD(#20, %253)>
	<0x3b1: %261 = MLOAD(#40)>
	<0x3b4: %262 = SUB(%259, %261)>
	<0x3b6: RETURN(%261, %262)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xebf num_insns:11 in: [0x35e] insns:[
	<0xec7: %867 = CALLER()    // ADDRESS>
	<0xef5: // MSTORE(#0, %867)>
	<0xefb: // MSTORE(#20, #3)>
	<0xf01: %877 = SHA3RES(%867, #3)    // M[0 +40]>
	<0xf32: // MSTORE(#0, %243)>
	<0xf38: // MSTORE(#20, %877)>
	<0xf3e: %888 = SHA3RES(%243, %877)    // M[0 +40]>
	<0xf3f: %889 = SLOAD(%888)>
	<0xf44: %890 = GT(%248, %889)>
	<0xf45: %891 = ISZERO(%890)>
	<0xf49: JUMPI(#fd0, %891)>
] fallthrough:0xf4a jumps:[0xfd0]>
<SSABasicBlock offset:0xf4a num_insns:9 in: [0xebf] insns:[
	<0xf50: %896 = CALLER()    // ADDRESS>
	<0xf7e: // MSTORE(#0, %896)>
	<0xf84: // MSTORE(#20, #3)>
	<0xf8a: %906 = SHA3RES(%896, #3)    // M[0 +40]>
	<0xfbb: // MSTORE(#0, %243)>
	<0xfc1: // MSTORE(#20, %906)>
	<0xfc7: %917 = SHA3RES(%243, %906)    // M[0 +40]>
	<0xfca: SSTORE(%917, #0)>
	<0xfcf: JUMP(#1064)>
] fallthrough:None jumps:[0x1064]>
<SSABasicBlock offset:0xfd0 num_insns:1 in: [0xebf] insns:[
	<0xfe2: JUMP(#18f5)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1064 num_insns:16 in: [0xf4a,0xfe3] insns:[
	<0x107c: %949 = CALLER()    // ADDRESS>
	<0x10b8: %955 = CALLER()    // ADDRESS>
	<0x10e6: // MSTORE(#0, %955)>
	<0x10ec: // MSTORE(#20, #3)>
	<0x10f2: %965 = SHA3RES(%955, #3)    // M[0 +40]>
	<0x1123: // MSTORE(#0, %243)>
	<0x1129: // MSTORE(#20, %965)>
	<0x112f: %976 = SHA3RES(%243, %965)    // M[0 +40]>
	<0x1130: %977 = SLOAD(%976)>
	<0x1133: %979 = MLOAD(#40)>
	<0x1137: MSTORE(%979, %977)>
	<0x113a: %981 = ADD(#20, %979)>
	<0x1140: %983 = MLOAD(#40)>
	<0x1143: %984 = SUB(%981, %983)>
	<0x1145: LOG3(%983, %984, #8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, %949, %243)>
	<0x114f: JUMP(#39d)>
] fallthrough:None jumps:[0x39d]>>

<SSAFunction name:totalSupply() hash:0x18160ddd offset:0x22e num_blocks:4 blocks:<SSABasicBlock offset:0x22e num_insns:3 in: [] insns:[
	<0x22f: %155 = CALLVALUE()>
	<0x231: %156 = ISZERO(%155)>
	<0x235: JUMPI(#23a, %156)>
] fallthrough:0x236 jumps:[0x9b9]>
<SSABasicBlock offset:0x236 num_insns:1 in: [0x22e] insns:[
	<0x239: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x243 num_insns:6 in: [0x9b9] insns:[
	<0x246: %162 = MLOAD(#40)>
	<0x24a: MSTORE(%162, %616)>
	<0x24d: %164 = ADD(#20, %162)>
	<0x253: %166 = MLOAD(#40)>
	<0x256: %167 = SUB(%164, %166)>
	<0x258: RETURN(%166, %167)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x9b9 num_insns:2 in: [0x22e] insns:[
	<0x9be: %616 = SLOAD(#2)>
	<0x9c2: JUMP(#243)>
] fallthrough:None jumps:[0x243]>>

<SSAFunction name:TOTAL_SUPPLY() hash:0x902d55a5 offset:0x465 num_blocks:3 blocks:<SSABasicBlock offset:0x465 num_insns:3 in: [] insns:[
	<0x466: %302 = CALLVALUE()>
	<0x468: %303 = ISZERO(%302)>
	<0x46c: JUMPI(#471, %303)>
] fallthrough:0x46d jumps:[0x47a]>
<SSABasicBlock offset:0x46d num_insns:1 in: [0x465] insns:[
	<0x470: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x47a num_insns:6 in: [0x465] insns:[
	<0x47d: %309 = MLOAD(#40)>
	<0x481: MSTORE(%309, #204fce5e3e25026110000000)>
	<0x484: %311 = ADD(#20, %309)>
	<0x48a: %313 = MLOAD(#40)>
	<0x48d: %314 = SUB(%311, %313)>
	<0x48f: RETURN(%313, %314)>
] fallthrough:None jumps:None>>

<SSAFunction name:transferFrom(address,address,uint256) hash:0x23b872dd offset:0x259 num_blocks:10 blocks:<SSABasicBlock offset:0x259 num_insns:3 in: [] insns:[
	<0x25a: %168 = CALLVALUE()>
	<0x25c: %169 = ISZERO(%168)>
	<0x260: JUMPI(#265, %169)>
] fallthrough:0x261 jumps:[0x265]>
<SSABasicBlock offset:0x261 num_insns:1 in: [0x259] insns:[
	<0x264: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x265 num_insns:4 in: [0x259] insns:[
	<0x274: %177 = CALLDATALOAD(#4)    // ADDRESS>
	<0x294: %182 = CALLDATALOAD(#24)    // ADDRESS>
	<0x2b4: %187 = CALLDATALOAD(#44)>
	<0x2c3: JUMP(#9c3)>
] fallthrough:None jumps:[0x9c3]>
<SSABasicBlock offset:0x9c3 num_insns:3 in: [0x265] insns:[
	<0x9f4: %622 = EQ(%182, #0)>
	<0x9f7: %625 = ISZERO(%622)>
	<0x9fb: JUMPI(#a00, %625)>
] fallthrough:0x9fc jumps:[0xa00]>
<SSABasicBlock offset:0x9fc num_insns:1 in: [0x9c3] insns:[
	<0x9ff: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xa00 num_insns:7 in: [0x9c3] insns:[
	<0xa33: // MSTORE(#0, %177)>
	<0xa39: // MSTORE(#20, #1)>
	<0xa3f: %639 = SHA3RES(%177, #1)    // M[0 +40]>
	<0xa40: %640 = SLOAD(%639)>
	<0xa42: %641 = GT(%187, %640)>
	<0xa45: %644 = ISZERO(%641)>
	<0xa49: JUMPI(#a4e, %644)>
] fallthrough:0xa4a jumps:[0xa4e]>
<SSABasicBlock offset:0xa4a num_insns:1 in: [0xa00] insns:[
	<0xa4d: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xa4e num_insns:11 in: [0xa00] insns:[
	<0xa81: // MSTORE(#0, %177)>
	<0xa87: // MSTORE(#20, #3)>
	<0xa8d: %658 = SHA3RES(%177, #3)    // M[0 +40]>
	<0xa90: %660 = CALLER()    // ADDRESS>
	<0xabe: // MSTORE(#0, %660)>
	<0xac4: // MSTORE(#20, %658)>
	<0xaca: %670 = SHA3RES(%660, %658)    // M[0 +40]>
	<0xacb: %671 = SLOAD(%670)>
	<0xacd: %672 = GT(%187, %671)>
	<0xad0: %675 = ISZERO(%672)>
	<0xad4: JUMPI(#ad9, %675)>
] fallthrough:0xad5 jumps:[0xad9]>
<SSABasicBlock offset:0xad5 num_insns:1 in: [0xa4e] insns:[
	<0xad8: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xad9 num_insns:3 in: [0xa4e] insns:[
	<0xb10: // MSTORE(#0, %177)>
	<0xb16: // MSTORE(#20, #1)>
	<0xb2a: JUMP(#18f5)>
] fallthrough:None jumps:None>>

<SSAFunction name:symbol() hash:0x95d89b41 offset:0x490 num_blocks:9 blocks:<SSABasicBlock offset:0x490 num_insns:3 in: [] insns:[
	<0x491: %315 = CALLVALUE()>
	<0x493: %316 = ISZERO(%315)>
	<0x497: JUMPI(#49c, %316)>
] fallthrough:0x498 jumps:[0x11d0]>
<SSABasicBlock offset:0x498 num_insns:1 in: [0x490] insns:[
	<0x49b: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x4a5 num_insns:9 in: [0x11d0] insns:[
	<0x4a8: %322 = MLOAD(#40)>
	<0x4ad: %324 = ADD(#20, %322)>
	<0x4b0: %325 = SUB(%324, %322)>
	<0x4b2: MSTORE(%322, %325)>
	<0x4b6: %326 = MLOAD(%1015)>
	<0x4b8: MSTORE(%324, %326)>
	<0x4bb: %328 = ADD(#20, %324)>
	<0x4bf: %329 = MLOAD(%1015)>
	<0x4c3: %331 = ADD(#20, %1015)>
] fallthrough:0x4ca jumps:None>
<SSABasicBlock offset:0x4ca num_insns:4 in: [0x4a5,0x4d3] insns:[
	<0x4ca: %1372 = PHI(%340, #0)>
	<0x4cd: %333 = LT(%1372, %329)>
	<0x4ce: %334 = ISZERO(%333)>
	<0x4d2: JUMPI(#4e5, %334)>
] fallthrough:0x4d3 jumps:[0x4e5]>
<SSABasicBlock offset:0x4d3 num_insns:6 in: [0x4ca] insns:[
	<0x4d5: %336 = ADD(%331, %1372)>
	<0x4d6: %337 = MLOAD(%336)>
	<0x4d9: %338 = ADD(%328, %1372)>
	<0x4da: MSTORE(%338, %337)>
	<0x4de: %340 = ADD(%1372, #20)>
	<0x4e4: JUMP(#4ca)>
] fallthrough:None jumps:[0x4ca]>
<SSABasicBlock offset:0x4e5 num_insns:4 in: [0x4ca] insns:[
	<0x4ee: %342 = ADD(%329, %328)>
	<0x4f2: %344 = AND(#1f, %329)>
	<0x4f4: %345 = ISZERO(%344)>
	<0x4f8: JUMPI(#512, %345)>
] fallthrough:0x4f9 jumps:[0x512]>
<SSABasicBlock offset:0x4f9 num_insns:9 in: [0x4e5] insns:[
	<0x4fb: %347 = SUB(%342, %344)>
	<0x4fd: %348 = MLOAD(%347)>
	<0x503: %351 = SUB(#20, %344)>
	<0x507: %353 = EXP(#100, %351)>
	<0x508: %354 = SUB(%353, #1)>
	<0x509: %355 = NOT(%354)>
	<0x50a: %356 = AND(%355, %348)>
	<0x50c: MSTORE(%347, %356)>
	<0x50f: %358 = ADD(#20, %347)>
] fallthrough:0x512 jumps:None>
<SSABasicBlock offset:0x512 num_insns:4 in: [0x4e5,0x4f9] insns:[
	<0x512: %1373 = PHI(%358, %342)>
	<0x51a: %360 = MLOAD(#40)>
	<0x51d: %361 = SUB(%1373, %360)>
	<0x51f: RETURN(%360, %361)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x11d0 num_insns:7 in: [0x490] insns:[
	<0x11d4: %1015 = MLOAD(#40)>
	<0x11d7: %1016 = ADD(%1015, #40)>
	<0x11da: // MSTORE(#40, %1016)>
	<0x11df: MSTORE(%1015, #4)>
	<0x11e2: %1020 = ADD(#20, %1015)>
	<0x1205: MSTORE(%1020, #4f52425300000000000000000000000000000000000000000000000000000000)>
	<0x1208: JUMP(#4a5)>
] fallthrough:None jumps:[0x4a5]>>

<SSAFunction name:name() hash:0x6fdde03 offset:0xf6 num_blocks:9 blocks:<SSABasicBlock offset:0xf6 num_insns:3 in: [] insns:[
	<0xf7: %64 = CALLVALUE()>
	<0xf9: %65 = ISZERO(%64)>
	<0xfd: JUMPI(#102, %65)>
] fallthrough:0xfe jumps:[0x709]>
<SSABasicBlock offset:0xfe num_insns:1 in: [0xf6] insns:[
	<0x101: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x10b num_insns:9 in: [0x709] insns:[
	<0x10e: %71 = MLOAD(#40)>
	<0x113: %73 = ADD(#20, %71)>
	<0x116: %74 = SUB(%73, %71)>
	<0x118: MSTORE(%71, %74)>
	<0x11c: %75 = MLOAD(%488)>
	<0x11e: MSTORE(%73, %75)>
	<0x121: %77 = ADD(#20, %73)>
	<0x125: %78 = MLOAD(%488)>
	<0x129: %80 = ADD(#20, %488)>
] fallthrough:0x130 jumps:None>
<SSABasicBlock offset:0x130 num_insns:4 in: [0x139,0x10b] insns:[
	<0x130: %1370 = PHI(#0, %89)>
	<0x133: %82 = LT(%1370, %78)>
	<0x134: %83 = ISZERO(%82)>
	<0x138: JUMPI(#14b, %83)>
] fallthrough:0x139 jumps:[0x14b]>
<SSABasicBlock offset:0x139 num_insns:6 in: [0x130] insns:[
	<0x13b: %85 = ADD(%80, %1370)>
	<0x13c: %86 = MLOAD(%85)>
	<0x13f: %87 = ADD(%77, %1370)>
	<0x140: MSTORE(%87, %86)>
	<0x144: %89 = ADD(%1370, #20)>
	<0x14a: JUMP(#130)>
] fallthrough:None jumps:[0x130]>
<SSABasicBlock offset:0x14b num_insns:4 in: [0x130] insns:[
	<0x154: %91 = ADD(%78, %77)>
	<0x158: %93 = AND(#1f, %78)>
	<0x15a: %94 = ISZERO(%93)>
	<0x15e: JUMPI(#178, %94)>
] fallthrough:0x15f jumps:[0x178]>
<SSABasicBlock offset:0x15f num_insns:9 in: [0x14b] insns:[
	<0x161: %96 = SUB(%91, %93)>
	<0x163: %97 = MLOAD(%96)>
	<0x169: %100 = SUB(#20, %93)>
	<0x16d: %102 = EXP(#100, %100)>
	<0x16e: %103 = SUB(%102, #1)>
	<0x16f: %104 = NOT(%103)>
	<0x170: %105 = AND(%104, %97)>
	<0x172: MSTORE(%96, %105)>
	<0x175: %107 = ADD(#20, %96)>
] fallthrough:0x178 jumps:None>
<SSABasicBlock offset:0x178 num_insns:4 in: [0x14b,0x15f] insns:[
	<0x178: %1371 = PHI(%107, %91)>
	<0x180: %109 = MLOAD(#40)>
	<0x183: %110 = SUB(%1371, %109)>
	<0x185: RETURN(%109, %110)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x709 num_insns:7 in: [0xf6] insns:[
	<0x70d: %488 = MLOAD(#40)>
	<0x710: %489 = ADD(%488, #40)>
	<0x713: // MSTORE(#40, %489)>
	<0x718: MSTORE(%488, #4)>
	<0x71b: %493 = ADD(#20, %488)>
	<0x73e: MSTORE(%493, #4f72627300000000000000000000000000000000000000000000000000000000)>
	<0x741: JUMP(#10b)>
] fallthrough:None jumps:[0x10b]>>

<SSAFunction name:allowance(address,address);remove_good(uint256[],bytes8,bool) hash:0xdd62ed3e offset:0x64f num_blocks:5 blocks:<SSABasicBlock offset:0x64f num_insns:3 in: [] insns:[
	<0x650: %445 = CALLVALUE()>
	<0x652: %446 = ISZERO(%445)>
	<0x656: JUMPI(#65b, %446)>
] fallthrough:0x657 jumps:[0x65b]>
<SSABasicBlock offset:0x657 num_insns:1 in: [0x64f] insns:[
	<0x65a: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x65b num_insns:3 in: [0x64f] insns:[
	<0x66a: %454 = CALLDATALOAD(#4)    // ADDRESS>
	<0x68a: %459 = CALLDATALOAD(#24)    // ADDRESS>
	<0x6af: JUMP(#162e)>
] fallthrough:None jumps:[0x162e]>
<SSABasicBlock offset:0x6b0 num_insns:6 in: [0x162e] insns:[
	<0x6b3: %466 = MLOAD(#40)>
	<0x6b7: MSTORE(%466, %1245)>
	<0x6ba: %468 = ADD(#20, %466)>
	<0x6c0: %470 = MLOAD(#40)>
	<0x6c3: %471 = SUB(%468, %470)>
	<0x6c5: RETURN(%470, %471)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x162e num_insns:8 in: [0x65b] insns:[
	<0x1663: // MSTORE(#0, %454)>
	<0x1669: // MSTORE(#20, #3)>
	<0x166f: %1233 = SHA3RES(%454, #3)    // M[0 +40]>
	<0x16a0: // MSTORE(#0, %459)>
	<0x16a6: // MSTORE(#20, %1233)>
	<0x16ac: %1244 = SHA3RES(%459, %1233)    // M[0 +40]>
	<0x16ad: %1245 = SLOAD(%1244)>
	<0x16b4: JUMP(#6b0)>
] fallthrough:None jumps:[0x6b0]>>

<SSAFunction name:reclaimContract(address) hash:0x2aed7f3f offset:0x2de num_blocks:10 blocks:<SSABasicBlock offset:0x2de num_insns:3 in: [] insns:[
	<0x2df: %202 = CALLVALUE()>
	<0x2e1: %203 = ISZERO(%202)>
	<0x2e5: JUMPI(#2ea, %203)>
] fallthrough:0x2e6 jumps:[0x2ea]>
<SSABasicBlock offset:0x2e6 num_insns:1 in: [0x2de] insns:[
	<0x2e9: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x2ea num_insns:2 in: [0x2de] insns:[
	<0x2f9: %211 = CALLDATALOAD(#4)    // ADDRESS>
	<0x31e: JUMP(#d82)>
] fallthrough:None jumps:[0xd82]>
<SSABasicBlock offset:0x31f num_insns:1 in: [0xe9e] insns:[
	<0x320: STOP()>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xd82 num_insns:4 in: [0x2ea] insns:[
	<0xd89: %804 = SLOAD(#0)    // ADDRESS>
	<0xdbd: %812 = CALLER()    // ADDRESS>
	<0xdd4: %815 = EQ(%812, %804)>
	<0xdda: JUMPI(#ddf, %815)>
] fallthrough:0xddb jumps:[0xddf]>
<SSABasicBlock offset:0xddb num_insns:1 in: [0xd82] insns:[
	<0xdde: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xddf num_insns:12 in: [0xd82] insns:[
	<0xe03: %824 = SLOAD(#0)    // ADDRESS>
	<0xe23: %831 = MLOAD(#40)>
	<0xe4b: MSTORE(%831, #f2fde38b00000000000000000000000000000000000000000000000000000000)>
	<0xe4e: %837 = ADD(#4, %831)>
	<0xe7e: MSTORE(%837, %824)>
	<0xe81: %843 = ADD(#20, %837)>
	<0xe89: %846 = MLOAD(#40)>
	<0xe8c: %847 = SUB(%843, %846)>
	<0xe92: %849 = EXTCODESIZE(%211)>
	<0xe93: %850 = ISZERO(%849)>
	<0xe95: %851 = ISZERO(%850)>
	<0xe99: JUMPI(#e9e, %851)>
] fallthrough:0xe9a jumps:[0xe9e]>
<SSABasicBlock offset:0xe9a num_insns:1 in: [0xddf] insns:[
	<0xe9d: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0xe9e num_insns:5 in: [0xddf] insns:[
	<0xea0: %854 = GAS()>
	<0xea1: %855 = CALL(%854, %211, #0, %846, %847, %846, #0)>
	<0xea2: %856 = ISZERO(%855)>
	<0xea4: %857 = ISZERO(%856)>
	<0xea8: JUMPI(#eb2, %857)>
] fallthrough:0xea9 jumps:[0x31f]>
<SSABasicBlock offset:0xea9 num_insns:4 in: [0xe9e] insns:[
	<0xea9: %859 = RETURNDATASIZE()>
	<0xead: RETURNDATACOPY(#0, #0, %859)>
	<0xeae: %861 = RETURNDATASIZE()>
	<0xeb1: REVERT(#0, %861)>
] fallthrough:None jumps:None>>

<SSAFunction name:transfer(address,uint256) hash:0xa9059cbb offset:0x520 num_blocks:8 blocks:<SSABasicBlock offset:0x520 num_insns:3 in: [] insns:[
	<0x521: %362 = CALLVALUE()>
	<0x523: %363 = ISZERO(%362)>
	<0x527: JUMPI(#52c, %363)>
] fallthrough:0x528 jumps:[0x52c]>
<SSABasicBlock offset:0x528 num_insns:1 in: [0x520] insns:[
	<0x52b: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x52c num_insns:3 in: [0x520] insns:[
	<0x53b: %371 = CALLDATALOAD(#4)    // ADDRESS>
	<0x55b: %376 = CALLDATALOAD(#24)>
	<0x56a: JUMP(#1209)>
] fallthrough:None jumps:[0x1209]>
<SSABasicBlock offset:0x1209 num_insns:3 in: [0x52c] insns:[
	<0x123a: %1027 = EQ(%371, #0)>
	<0x123d: %1030 = ISZERO(%1027)>
	<0x1241: JUMPI(#1246, %1030)>
] fallthrough:0x1242 jumps:[0x1246]>
<SSABasicBlock offset:0x1242 num_insns:1 in: [0x1209] insns:[
	<0x1245: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1246 num_insns:8 in: [0x1209] insns:[
	<0x124b: %1035 = CALLER()    // ADDRESS>
	<0x1279: // MSTORE(#0, %1035)>
	<0x127f: // MSTORE(#20, #1)>
	<0x1285: %1045 = SHA3RES(%1035, #1)    // M[0 +40]>
	<0x1286: %1046 = SLOAD(%1045)>
	<0x1288: %1047 = GT(%376, %1046)>
	<0x128b: %1050 = ISZERO(%1047)>
	<0x128f: JUMPI(#1294, %1050)>
] fallthrough:0x1290 jumps:[0x1294]>
<SSABasicBlock offset:0x1290 num_insns:1 in: [0x1246] insns:[
	<0x1293: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1294 num_insns:4 in: [0x1246] insns:[
	<0x129d: %1056 = CALLER()    // ADDRESS>
	<0x12cb: // MSTORE(#0, %1056)>
	<0x12d1: // MSTORE(#20, #1)>
	<0x12e5: JUMP(#18f5)>
] fallthrough:None jumps:None>>

<SSAFunction name:approve(address,uint256) hash:0x95ea7b3 offset:0x186 num_blocks:5 blocks:<SSABasicBlock offset:0x186 num_insns:3 in: [] insns:[
	<0x187: %111 = CALLVALUE()>
	<0x189: %112 = ISZERO(%111)>
	<0x18d: JUMPI(#192, %112)>
] fallthrough:0x18e jumps:[0x192]>
<SSABasicBlock offset:0x18e num_insns:1 in: [0x186] insns:[
	<0x191: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x192 num_insns:3 in: [0x186] insns:[
	<0x1a1: %120 = CALLDATALOAD(#4)    // ADDRESS>
	<0x1c1: %125 = CALLDATALOAD(#24)>
	<0x1d0: JUMP(#742)>
] fallthrough:None jumps:[0x742]>
<SSABasicBlock offset:0x1d1 num_insns:8 in: [0x742] insns:[
	<0x1d4: %130 = MLOAD(#40)>
	<0x1d7: %131 = ISZERO(#1)>
	<0x1da: %134 = ISZERO(%131)>
	<0x1dc: MSTORE(%130, %134)>
	<0x1df: %136 = ADD(#20, %130)>
	<0x1e5: %138 = MLOAD(#40)>
	<0x1e8: %139 = SUB(%136, %138)>
	<0x1ea: RETURN(%138, %139)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x742 num_insns:16 in: [0x192] insns:[
	<0x74a: %498 = CALLER()    // ADDRESS>
	<0x778: // MSTORE(#0, %498)>
	<0x77e: // MSTORE(#20, #3)>
	<0x784: %508 = SHA3RES(%498, #3)    // M[0 +40]>
	<0x7b5: // MSTORE(#0, %120)>
	<0x7bb: // MSTORE(#20, %508)>
	<0x7c1: %519 = SHA3RES(%120, %508)    // M[0 +40]>
	<0x7c4: SSTORE(%519, %125)>
	<0x7dd: %522 = CALLER()    // ADDRESS>
	<0x818: %527 = MLOAD(#40)>
	<0x81c: MSTORE(%527, %125)>
	<0x81f: %529 = ADD(#20, %527)>
	<0x825: %531 = MLOAD(#40)>
	<0x828: %532 = SUB(%529, %531)>
	<0x82a: LOG3(%531, %532, #8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, %522, %120)>
	<0x833: JUMP(#1d1)>
] fallthrough:None jumps:[0x1d1]>>

<SSAFunction name:balanceOf(address) hash:0x70a08231 offset:0x3b7 num_blocks:5 blocks:<SSABasicBlock offset:0x3b7 num_insns:3 in: [] insns:[
	<0x3b8: %263 = CALLVALUE()>
	<0x3ba: %264 = ISZERO(%263)>
	<0x3be: JUMPI(#3c3, %264)>
] fallthrough:0x3bf jumps:[0x3c3]>
<SSABasicBlock offset:0x3bf num_insns:1 in: [0x3b7] insns:[
	<0x3c2: REVERT(#0, #0)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x3c3 num_insns:2 in: [0x3b7] insns:[
	<0x3d2: %272 = CALLDATALOAD(#4)    // ADDRESS>
	<0x3f7: JUMP(#1150)>
] fallthrough:None jumps:[0x1150]>
<SSABasicBlock offset:0x3f8 num_insns:6 in: [0x1150] insns:[
	<0x3fb: %279 = MLOAD(#40)>
	<0x3ff: MSTORE(%279, %999)>
	<0x402: %281 = ADD(#20, %279)>
	<0x408: %283 = MLOAD(#40)>
	<0x40b: %284 = SUB(%281, %283)>
	<0x40d: RETURN(%283, %284)>
] fallthrough:None jumps:None>
<SSABasicBlock offset:0x1150 num_insns:5 in: [0x3c3] insns:[
	<0x1185: // MSTORE(#0, %272)>
	<0x118b: // MSTORE(#20, #1)>
	<0x1191: %998 = SHA3RES(%272, #1)    // M[0 +40]>
	<0x1192: %999 = SLOAD(%998)>
	<0x1198: JUMP(#3f8)>
] fallthrough:None jumps:[0x3f8]>>

<SSAFunction name:_fallthrough hash:0x0 offset:0xd num_blocks:18 blocks:<SSABasicBlock offset:0xd num_insns:5 in: [] insns:[
	<0xf: %7 = CALLDATALOAD(#0)>
	<0x2f: %9 = DIV(%7, #100000000000000000000000000000000000000000000000000000000)>
	<0x35: %11 = AND(#ffffffff, %9)>
	<0x3c: %13 = EQ(#6fdde03, %11)>
	<0x0: ICONDCALL(name(), %13)>
] fallthrough:0x41 jumps:None>
<SSABasicBlock offset:0x41 num_insns:2 in: [0xd] insns:[
	<0x47: %16 = EQ(#95ea7b3, %11)>
	<0x0: ICONDCALL(approve(address,uint256), %16)>
] fallthrough:0x4c jumps:None>
<SSABasicBlock offset:0x4c num_insns:2 in: [0x41] insns:[
	<0x52: %19 = EQ(#17ffc320, %11)>
	<0x0: ICONDCALL(reclaimToken(address), %19)>
] fallthrough:0x57 jumps:None>
<SSABasicBlock offset:0x57 num_insns:2 in: [0x4c] insns:[
	<0x5d: %22 = EQ(#18160ddd, %11)>
	<0x0: ICONDCALL(totalSupply(), %22)>
] fallthrough:0x62 jumps:None>
<SSABasicBlock offset:0x62 num_insns:2 in: [0x57] insns:[
	<0x68: %25 = EQ(#23b872dd, %11)>
	<0x0: ICONDCALL(transferFrom(address,address,uint256), %25)>
] fallthrough:0x6d jumps:None>
<SSABasicBlock offset:0x6d num_insns:2 in: [0x62] insns:[
	<0x73: %28 = EQ(#2aed7f3f, %11)>
	<0x0: ICONDCALL(reclaimContract(address), %28)>
] fallthrough:0x78 jumps:None>
<SSABasicBlock offset:0x78 num_insns:2 in: [0x6d] insns:[
	<0x7e: %31 = EQ(#313ce567, %11)>
	<0x0: ICONDCALL(decimals(), %31)>
] fallthrough:0x83 jumps:None>
<SSABasicBlock offset:0x83 num_insns:2 in: [0x78] insns:[
	<0x89: %34 = EQ(#66188463, %11)>
	<0x0: ICONDCALL(decreaseApproval(address,uint256), %34)>
] fallthrough:0x8e jumps:None>
<SSABasicBlock offset:0x8e num_insns:2 in: [0x83] insns:[
	<0x94: %37 = EQ(#70a08231, %11)>
	<0x0: ICONDCALL(balanceOf(address), %37)>
] fallthrough:0x99 jumps:None>
<SSABasicBlock offset:0x99 num_insns:2 in: [0x8e] insns:[
	<0x9f: %40 = EQ(#8da5cb5b, %11)>
	<0x0: ICONDCALL(owner(), %40)>
] fallthrough:0xa4 jumps:None>
<SSABasicBlock offset:0xa4 num_insns:2 in: [0x99] insns:[
	<0xaa: %43 = EQ(#902d55a5, %11)>
	<0x0: ICONDCALL(TOTAL_SUPPLY(), %43)>
] fallthrough:0xaf jumps:None>
<SSABasicBlock offset:0xaf num_insns:2 in: [0xa4] insns:[
	<0xb5: %46 = EQ(#95d89b41, %11)>
	<0x0: ICONDCALL(symbol(), %46)>
] fallthrough:0xba jumps:None>
<SSABasicBlock offset:0xba num_insns:2 in: [0xaf] insns:[
	<0xc0: %49 = EQ(#a9059cbb, %11)>
	<0x0: ICONDCALL(transfer(address,uint256), %49)>
] fallthrough:0xc5 jumps:None>
<SSABasicBlock offset:0xc5 num_insns:2 in: [0xba] insns:[
	<0xcb: %52 = EQ(#c0ee0b8a, %11)>
	<0x0: ICONDCALL(tokenFallback(address,uint256,bytes), %52)>
] fallthrough:0xd0 jumps:None>
<SSABasicBlock offset:0xd0 num_insns:2 in: [0xc5] insns:[
	<0xd6: %55 = EQ(#d73dd623, %11)>
	<0x0: ICONDCALL(increaseApproval(address,uint256), %55)>
] fallthrough:0xdb jumps:None>
<SSABasicBlock offset:0xdb num_insns:2 in: [0xd0] insns:[
	<0xe1: %58 = EQ(#dd62ed3e, %11)>
	<0x0: ICONDCALL(allowance(address,address);remove_good(uint256[],bytes8,bool), %58)>
] fallthrough:0xe6 jumps:None>
<SSABasicBlock offset:0xe6 num_insns:2 in: [0xdb] insns:[
	<0xec: %61 = EQ(#f2fde38b, %11)>
	<0x0: ICONDCALL(transferOwnership(address), %61)>
] fallthrough:0xf1 jumps:None>
<SSABasicBlock offset:0xf1 num_insns:1 in: [0xe6,0x0] insns:[
	<0xf5: REVERT(#0, #0)>
] fallthrough:None jumps:None>>


Identified Functions:
	_dispatch argument offsets:[]
	transferOwnership(address) argument offsets:[(4, 36)]
	decimals() argument offsets:[]
	tokenFallback(address,uint256,bytes) argument offsets:[]
	reclaimToken(address) argument offsets:[(4, 36)]
	owner() argument offsets:[]
	increaseApproval(address,uint256) argument offsets:[(4, 36)]
	decreaseApproval(address,uint256) argument offsets:[(4, 36), (36, 68)]
	totalSupply() argument offsets:[]
	TOTAL_SUPPLY() argument offsets:[]
	transferFrom(address,address,uint256) argument offsets:[(4, 36), (36, 68), (68, 100)]
	symbol() argument offsets:[]
	name() argument offsets:[]
	allowance(address,address);remove_good(uint256[],bytes8,bool) argument offsets:[(4, 36), (36, 68)]
	reclaimContract(address) argument offsets:[(4, 36)]
	transfer(address,uint256) argument offsets:[(4, 36), (36, 68)]
	approve(address,uint256) argument offsets:[(4, 36), (36, 68)]
	balanceOf(address) argument offsets:[(4, 36)]
	_fallthrough argument offsets:[(0, 32)]

Storage Locations: [0, 2]
Memory Locations: [64, 0, 32]
Analyzing Memory Location: 64

	0x4: // MSTORE(#40, #80)
	0x2c7: %192 = MLOAD(#40)
	0x2d8: %200 = MLOAD(#40)
	0x56e: %381 = MLOAD(#40)
	0x57f: %389 = MLOAD(#40)
	0x638: %435 = MLOAD(#40)
	0x649: %443 = MLOAD(#40)
	0xd65: %795 = MLOAD(#40)
	0xd72: %799 = MLOAD(#40)
	0x1411: %1120 = MLOAD(#40)
	0x141e: %1124 = MLOAD(#40)
	0x1612: %1214 = MLOAD(#40)
	0x161f: %1218 = MLOAD(#40)
	0x182b: %1307 = MLOAD(#40)
	0x1898: %1324 = MLOAD(#40)
	0x18c8: %1342 = MLOAD(#40)
	0x17bf: %1287 = MLOAD(#40)
	0x17c2: %1289 = MLOAD(#40)
	0x339: %224 = MLOAD(#40)
	0x34c: %232 = MLOAD(#40)
	0x8b1: %557 = MLOAD(#40)
	0x917: %572 = MLOAD(#40)
	0x426: %292 = MLOAD(#40)
	0x45f: %300 = MLOAD(#40)
	0x3a0: %253 = MLOAD(#40)
	0x3b1: %261 = MLOAD(#40)
	0x1133: %979 = MLOAD(#40)
	0x1140: %983 = MLOAD(#40)
	0x246: %162 = MLOAD(#40)
	0x253: %166 = MLOAD(#40)
	0x47d: %309 = MLOAD(#40)
	0x48a: %313 = MLOAD(#40)
	0x4a8: %322 = MLOAD(#40)
	0x51a: %360 = MLOAD(#40)
	0x11d4: %1015 = MLOAD(#40)
	0x11da: // MSTORE(#40, %1016)
	0x10e: %71 = MLOAD(#40)
	0x180: %109 = MLOAD(#40)
	0x70d: %488 = MLOAD(#40)
	0x713: // MSTORE(#40, %489)
	0x6b3: %466 = MLOAD(#40)
	0x6c0: %470 = MLOAD(#40)
	0xe23: %831 = MLOAD(#40)
	0xe89: %846 = MLOAD(#40)
	0x1d4: %130 = MLOAD(#40)
	0x1e5: %138 = MLOAD(#40)
	0x818: %527 = MLOAD(#40)
	0x825: %531 = MLOAD(#40)
	0x3fb: %279 = MLOAD(#40)
	0x408: %283 = MLOAD(#40)



Function _dispatch storage:
Function transferOwnership(address) storage:
	Analyzing Storage Location: 0
		0x16ba: %1247 = SLOAD(#0)    // ADDRESS
		0x1768: %1277 = SLOAD(#0)    // ADDRESS
		0x17d1: %1294 = SLOAD(#0)
		0x1806: SSTORE(#0, %1302)
		0x83b: %536 = SLOAD(#0)    // ADDRESS
		0x119e: %1001 = SLOAD(#0)    // ADDRESS
		0xd89: %804 = SLOAD(#0)    // ADDRESS
		0xe03: %824 = SLOAD(#0)    // ADDRESS


Function decimals() storage:
Function tokenFallback(address,uint256,bytes) storage:
Function reclaimToken(address) storage:
	Analyzing Storage Location: 0
		0x16ba: %1247 = SLOAD(#0)    // ADDRESS
		0x1768: %1277 = SLOAD(#0)    // ADDRESS
		0x17d1: %1294 = SLOAD(#0)
		0x1806: SSTORE(#0, %1302)
		0x83b: %536 = SLOAD(#0)    // ADDRESS
		0x119e: %1001 = SLOAD(#0)    // ADDRESS
		0xd89: %804 = SLOAD(#0)    // ADDRESS
		0xe03: %824 = SLOAD(#0)    // ADDRESS


Function owner() storage:
	Analyzing Storage Location: 0
		0x16ba: %1247 = SLOAD(#0)    // ADDRESS
		0x1768: %1277 = SLOAD(#0)    // ADDRESS
		0x17d1: %1294 = SLOAD(#0)
		0x1806: SSTORE(#0, %1302)
		0x83b: %536 = SLOAD(#0)    // ADDRESS
		0x119e: %1001 = SLOAD(#0)    // ADDRESS
		0xd89: %804 = SLOAD(#0)    // ADDRESS
		0xe03: %824 = SLOAD(#0)    // ADDRESS


Function increaseApproval(address,uint256) storage:
Function decreaseApproval(address,uint256) storage:
Function totalSupply() storage:
	Analyzing Storage Location: 2
		0x9be: %616 = SLOAD(#2)


Function TOTAL_SUPPLY() storage:
Function transferFrom(address,address,uint256) storage:
Function symbol() storage:
Function name() storage:
Function allowance(address,address);remove_good(uint256[],bytes8,bool) storage:
Function reclaimContract(address) storage:
	Analyzing Storage Location: 0
		0x16ba: %1247 = SLOAD(#0)    // ADDRESS
		0x1768: %1277 = SLOAD(#0)    // ADDRESS
		0x17d1: %1294 = SLOAD(#0)
		0x1806: SSTORE(#0, %1302)
		0x83b: %536 = SLOAD(#0)    // ADDRESS
		0x119e: %1001 = SLOAD(#0)    // ADDRESS
		0xd89: %804 = SLOAD(#0)    // ADDRESS
		0xe03: %824 = SLOAD(#0)    // ADDRESS


Function transfer(address,uint256) storage:
Function approve(address,uint256) storage:
Function balanceOf(address) storage:
Function _fallthrough storage:
[+] Contract can not send ether.
[+] Contract calls:
	%1333 = CALL(%1332, %1304, #0, %1324, %1325, %1324, #20)
		Gas: %1332			%1332 = GAS()
		To: %1304 			%1304 = AND(#ffffffffffffffffffffffffffffffffffffffff, <Unresolved sp:-3 block:0x180a>)
		Value: #0
		In Data Offset: %1324		%1324 = MLOAD(#40)
		In Data Size: %1325		%1325 = SUB(%1321, %1324)
		Out Data Offset: %1324		%1324 = MLOAD(#40)
		Out Data Size: #20

	%581 = CALL(%580, %149, #0, %572, %573, %572, #20)
		Gas: %580			%580 = GAS()
		To: %149 			%149 = CALLDATALOAD(#4)    // ADDRESS
		Value: #0
		In Data Offset: %572		%572 = MLOAD(#40)
		In Data Size: %573		%573 = SUB(%569, %572)
		Out Data Offset: %572		%572 = MLOAD(#40)
		Out Data Size: #20

	%855 = CALL(%854, %211, #0, %846, %847, %846, #0)
		Gas: %854			%854 = GAS()
		To: %211 			%211 = CALLDATALOAD(#4)    // ADDRESS
		Value: #0
		In Data Offset: %846		%846 = MLOAD(#40)
		In Data Size: %847		%847 = SUB(%843, %846)
		Out Data Offset: %846		%846 = MLOAD(#40)
		Out Data Size: #0

[+] Wrote _dispatch to output/_dispatch.png
[+] Wrote transferOwnership(address) to output/transferOwnership(address).png
[+] Wrote decimals() to output/decimals().png
[+] Wrote tokenFallback(address,uint256,bytes) to output/tokenFallback(address,uint256,bytes).png
[+] Wrote reclaimToken(address) to output/reclaimToken(address).png
[+] Wrote owner() to output/owner().png
[+] Wrote increaseApproval(address,uint256) to output/increaseApproval(address,uint256).png
[+] Wrote decreaseApproval(address,uint256) to output/decreaseApproval(address,uint256).png
[+] Wrote totalSupply() to output/totalSupply().png
[+] Wrote TOTAL_SUPPLY() to output/TOTAL_SUPPLY().png
[+] Wrote transferFrom(address,address,uint256) to output/transferFrom(address,address,uint256).png
[+] Wrote symbol() to output/symbol().png
[+] Wrote name() to output/name().png
[+] Wrote allowance(address,address);remove_good(uint256[],bytes8,bool) to output/allowance(address,address);remove_good(uint256[],bytes8,bool).png
[+] Wrote reclaimContract(address) to output/reclaimContract(address).png
[+] Wrote transfer(address,uint256) to output/transfer(address,uint256).png
[+] Wrote approve(address,uint256) to output/approve(address,uint256).png
[+] Wrote balanceOf(address) to output/balanceOf(address).png
[+] Wrote _fallthrough to output/_fallthrough.png
